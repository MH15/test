<template include="header,sidebar,article,resume">
    <div id="container">
        {{> resume }}
        {{> article }}
        <div class="grid" order="1">
            {{> header }}
            {{> sidebar}}
            <div id="grid-main">
                <h2>I'm an artist and computer scientist with a background in web development.</h2>
                <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the
                    industry's standard
                    dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to
                    make a type specimen
                    book. It has survived not only five centuries, but also the leap into electronic typesetting,
                    remaining essentially
                    unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem
                    Ipsum passages, and more
                    recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
                </p>
            </div>
            <div id="grid-contact">
                <hr />
                <h4>I'm always open for commissions and collaborations. Drop me a line:</h4>
                <p class="contact-method">937 846 4465</p>
                <p class="contact-method">email</p>
                <p class="contact-method">github</p>
                <hr />
            </div>
            <div id="grid-splash">
                <h1>TODO</h1>
                <p>Image with block text overtop like in template 2</p>
            </div>
        </div>

    </div>
</template>

<style lang="scss">
    @import url('https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,400i,700,700i,900|Spectral:300,400,500,600,700,800&display=swap');

    div.grid {
        position: fixed;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        display: grid;
        grid-template-columns: [menu] 55px [start] 50px [main] 3fr [contact] 2fr [splash] 5fr;
        grid-template-rows: [header] 55px [start] 50px [body] 90fr;
        transform-origin: 100% 0;

        background: #e7e7e7;
        border-radius: 8px;
        box-shadow: 0 0 19px rgba(0, 0, 0, 0.5);

        transition: all ease 200ms;

        &:hover {
            box-shadow: 0 0 19px 5px rgba(0, 0, 0, 0.5);
        }
    }

    div.grid[order="1"] {
        background: rgb(163, 147, 147);
        color: #1d2a32
    }

    #grid-header {
        grid-column: start / span 4;
        grid-row: header;
    }

    #grid-main {
        grid-column: main;
        grid-row: body;

        h2 {
            margin-top: 0;
            font-family: "Spectral", serif;
            font-weight: 600;
        }
    }

    #grid-contact {
        grid-column: contact;
        grid-row: body;

        h4 {
            margin-top: 0;
            font-family: "Spectral", serif;
            font-weight: 600;
        }
    }

    #grid-splash {
        grid-column: splash;
        grid-row: body;
    }

    * {
        box-sizing: border-box;
        /* border: 1px solid rgba(0, 0, 0, 0.5); */
    }

    body,
    html {
        margin: 0;
        padding: 0;
        height: 100%;
        font-family: 'Spectral', serif;
        font-family: 'Source Sans Pro', sans-serif;
        overflow: hidden;
        background: black;
    }

    h1 {
        background: orange;
    }
</style>

<script>
    let menu, bounds
    let pages = document.querySelectorAll(".grid")
    let right, bottom
    console.log(pages)
    let range = 40
    let locked = false
    let lock = 26
    // page.style.transform = `
    topPage = document.querySelector('[order="1"]');
    console.log(topPage)

    // TODO: implement with a Queue structure (somehow)
    pages.forEach((page) => {
        let order = page.getAttribute("order")
        page.style.zIndex = 1000 - order
        page.addEventListener('click', (e) => {
            console.log(page, topPage)
            if (page != topPage) {
                console.log("changin pages")
                topPage.setAttribute("order", page.getAttribute("order"))
                topPage.style.zIndex = 1000 - page.getAttribute("order")
                page.setAttribute("order", 1)
                page.style.zIndex = 1000 - 1
                console.log(page, topPage)

                topPage = page
            } else {
                console.log("already front")
            }
            if (!page.getAttribute("order") == 1) {
                page.style.cursor = "pointer"
            } else {
                page.style.cursor = "default"
            }
        })
    })



    document.addEventListener('mousemove', (e) => {

        pages.forEach((page) => {
            let order = page.getAttribute("order")
            // console.log(order)
            if (order == 1) {
                menu = page.querySelector("#menu")
                bounds = menu.getBoundingClientRect()
                right = bounds.right
                bottom = bounds.bottom
            } else {
                page.style.cursor = "pointer"
            }

            let { clientX, clientY } = e
            let deltaX = clientX - right
            let deltaY = clientY - bottom
            let closest = Math.max(deltaY, deltaX)

            let dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY)
            // console.log(range - closest)
            let control = range - closest
            if (control < 0) {
                control = 0
            }
            // console.log(control, locked)

            // TODO: unlock when mouseover active card
            if (control > lock) {
                locked = true
            }

            if (!locked) {
                uniqueControl = control * (pages.length - order)
                let styleString = `translate(${uniqueControl * 1.25}px,${uniqueControl * .75}px) rotate(${-uniqueControl / 18}deg)`

                page.style.transform = styleString
            } else {
                if (range - closest <= -lock * 2) {
                    locked = false
                }
            }
        })

    })


</script>